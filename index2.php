<!DOCTYPE html>
<!-- <html lang="en"> -->
<head>
    <meta charset="UTF-8">
    <meta name="keywords" content="Web-разработчик,Front-end,Back End,
    Инструменты разработчика,Как стать веб-разработчиком,Зарплата веб-разработчика" />
    <meta name="description" content="Кто такой Web-разработчик" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./css/style2.css">
    <title>Информационный портал</title>
</head>
<body>
<?php require "document.php/header.php"?>
<div class="container">
    <div class="istoriya-web">
         <h3>
              Web-разработчик
        </h3>
        <p>
            Словарь веб-разработчика включает в себя 
            большое количество терминов англоязычного происхождения, 
            поэтому немаловажным будет знание английского языка. 
            Web-developer должен быть довольно коммуникабельным, 
            чтобы суметь понять замысел заказчика и правильно презентовать ему конечный продукт.</p>
        <p>
            Этот специалист обладает такими чертами характера, как внимание, 
            терпеливость, усидчивость, хорошая память, умение работать в команде, 
            способность справляться с большим объёмом информации и выдерживать серьезные
            умственные нагрузки. Важно также следить за происходящим в IT-сфере и 
            оперативно применять в своей работе новые инструменты и технологии.
        </p>
        <p>
            Благодаря усилиям разработчика контент не отражается
            в статических HTML-страницах, а генерируется в процессе.
            Содержимое формируется в зависимости от HTTP-запроса и URL 
            пользователя. Сайт фактически «узнает» своих посетителей и 
            общается с ними. Значит, суть профессии веб-программист заключается
            в разработке интерактивных интернет-сайтов и приложений.
        </p>
        <h3>
            Front-end vs Back-end 
        </h3>
        <p>
            <a href="index.Fronted.php">Front-end </a> - включает всю видимую часть ресурса, которая после запроса 
            открывается в окне браузера. Слайд-шоу, выпадающие меню, различные
            формы для заполнения, кнопки, реагирующие на нажатие.
            Каждый интерактивный элемент создает веб-разработчик.
        </p>
        <p>
            <a href="indexFr.php">Back End</a> - разработка заключается в написании скрытой от 
            пользователя части приложения, располагающейся на сервере.
            Web-программирование бэкенда гораздо сложнее. Включает работу не 
            только с самим приложением, но также с базой данных и сервером.
        </p>
        <h3>
            Инструменты разработчика
        </h3>
        <p>
            Разработка приложений – сложный и кропотливый процесс.
            Чтобы его контролировать, программисты определили для себя набор основных инструментов.
        </p>
        <p>
            Текстовый редактор — один из важнейших элементов.
            С помощью редактора web-программист взаимодействует 
            со своим кодом, формирует элементы будущей конструкции сайта.
        </p>
        <p>
            У текстовых редакторов есть свои критерии.
            Разработчик одновременно работает с несколькими файлами. 
            Поэтому редактор должен обеспечивать комфортное и быстрое 
            использование файловой системы и корректировку кода.
        </p>
        <p>
            Также редакторы бывают с графическим интерфейсом и 
            терминальные, работающие через командную строку. Первые, конечно, 
            удобней, у них есть подсказки и подсветка синтаксиса. Среди редакторов 
            с GIU наибольшей популярностью пользуются Coda, Text Mate и Sublime Text.
        </p>
        <p>
            Существуют интегрированные среды разработки, 
            наподобие Eclipse или Visual Studio. Они обеспечивают 
            быстрое редактирование и управление кодом, но сложны для 
            начинающих и включают много инструментов для разработки промышленного 
            ПО, а не веб-приложений.
        </p>
        <p>
            Программисты используют систему контроля версий для 
            создания контрольных точек в коде, которые видит вся команда 
            разработчиков. При этом каждый участник проекта работает над 
            своим фрагментом, не мешая другим. Наибольшей популярностью 
            пользуются Git, SVN, Mercurial.
        <p>
        <img src="./img/2157009.jpg" alt="">
        <h3>
            Почему сложно быть веб-разработчиком
        </h3>
        <p>
            Главный минус профессии «веб-программист» в том,
            что это сидячая работа. Труд чреват болями в запястьях, 
            спине и пояснице, проблемами с позвоночником,
            ухудшением осанки. Наверняка вы обращали внимание, 
            что большинство компьютерщиков носят очки.
        <p>
        <p>
            В процессе разработки web-программист взаимодействует
            с членами команды, и не всегда удается достичь консенсуса.
            Иногда возникают трудности с заказчиками, которые порой
            далеки от программирования и не всегда четко объясняют 
            свои требования. Еще один недостаток – ненормированный 
            рабочий день. Когда требуется срочная доработка и редактирование 
            проекта, программисты сутками сидят над кодом. 
        <p>
        <p>
            Представителям этой профессии приходится
            постоянно подстраиваться под очередные веяния в технологиях и 
            заниматься непрерывным самообразованием. Веб-программист не та 
            профессия, в которой, достигнув определенного уровня, можно почивать на лаврах. 
        <p>
        <h3>
            Как стать веб-программистом
        </h3>
        <p>
            Итак, вы твердо решили заняться разработкой 
            веб-сайтов и приложений. Первое, что вы должны 
            сделать, – это подтянуть свой английский. Именно
            на этом языке проходят бесплатные курсы, написаны
            библиотеки и вся официальная документация.
        <p>
        <p>
            Следующий шаг состоит в изучении HTML,
            CSS и JS. Есть два способа это сделать:
        </p>
        <ul>
            <li>
                Самостоятельно, через книги, видеоролики и онлайн-платформы.
            </li>
            <li>
                С помощью преподавателя, записавшись на платные курсы.
            </li>
        </ul>
        <p>
            В процессе обучения пишите простые приложения, 
            сайты-одностраничники. Обязательно занимайтесь 
            практикой и постепенно знакомьтесь с Node.js для
            реализации скриптов на сервере. Освоив фронтенд, 
            переходите к бэкенду, библиотекам и базе данных.
        </p>
        <h3>
            Выбор серверного языка
        </h3>
        <p>
            Веб-программисту недостаточно знать один язык.
            Для написания полноценных приложений помимо JS вам 
            понадобятся другие серверные языки. Согласно индексу 
            TIOBE хедлайнерами на сегодняшний день являются:
        </p>
        <ul>
            <li>
                Java;
            </li>
            <li>
                Python;
            </li>
            <li>
                C#;
            </li>
            <li>
                 JavaScript;
            </li>
            <li>
                PHP, но его рейтинги постепенно падают.
            </li>
        </ul>
        <p>
            Мы рекомендуем остановиться на Python.
            Это объектно-ориентированный язык с большими 
            возможностями. Под него написано множество библиотек и 
            модулей. У языка очень простой и понятный синтаксис, который
            легко выучить за короткий срок. На Python пишутся не 
            только веб-приложения, но настольные программы и даже видеоигры. 
        </p>
        <p>
            Выбрав язык, учите под него фреймворки. 
            Они значительно повышают производительность приложений
            и облегчают процесс разработки. Для Python это Django,
            самый популярный в США фреймворк Laravel для PHP. 
            Если вы твердо решили работать с JS, то вам пригодятся Angular.js.
        </p>
        <img src="./img/2157002.jpg" alt="">
        <h3>
            Обязанности на работе
        </h3>
        <p>
            Веб-программист работает с софтом, соблюдая примерно следующий алгоритм деятельности:
        </p>
        <ul>
            <li>
                получение от заказчика задачи, прояснение ее целей;
            </li>
            <li>
                совместная с дизайнерами, менеджерами, маркетологами проработка деталей;
            </li>
            <li>
                написание необходимых программ, которые обеспечат функционирование ресурса;
            </li>
            <li>
                составление технической документации;
            </li>
            <li>
                тестирование сайта, выявление и устранение недоработок и багов;
            </li>
            <li>
                запуск проекта и его презентация клиенту;
            </li>
            <li>
                дальнейшее сопровождение и обновление ресурса (по договоренности с заказчиком).
            </li>
        </ul>
        <p>
            Для качественного выполнения поставленной задачи хороший web-разработчик должен:
        </p>
        <ul>
            <li>
                работать с одним, а лучше с несколькими языками программирования 
                (PHP, JavaScript, Ruby, Perl, C++), особенно важно это для создателей бек-энда;
            </li>
            <li>
                уметь использовать крупные базы данных;
            </li>
            <li>
                знать HTML, CSS, jQuery, различные фреймворки (например, Bootstrap, Yii или Foundation);
            </li>
            <li>
                хорошо владеть техническим английским языком, а для работы с иностранными клиентами, и разговорным.
            </li>
        </ul>
        <p>
            Веб-разработчику необходимо на стадии проектирования
             вникнуть в тематику проекта, учесть возможное поведение 
             пользователей, определить, какой язык кодирования, среду 
             разработки, интерфейс и приложения наиболее эффективно использовать.
              Желательно все это сделать самостоятельно, не загружая заказчика деталями.
        </p>
        <h3>
            Зарплата веб-разработчика
        </h3>
        <p>
            Зарплата определяется несколькими факторами.
             В среднем, она колеблется от 80 000 рублей до 130 000 рублей в 
             зависимости от уровня владения языками программирования и опыта 
             в сфере веб-разработки. Девелопер, работающий непосредственно на 
             компанию получает меньше, чем свободный разработчик. Это связанно 
             с тем, что часть заработанных денег уходит в долю компании. 
             Однако работа на компанию обеспечивает вас стабильным и непрерывным 
             потоком проектов, чего нельзя сказать о работе фрилансера. 
             Хотя средний доход фрилансеров очень разнится, некоторые из них 
             утверждают, что вы можете заработать до 300 000 рублей, работая в 
             качестве независимого веб-разработчика.
        </p>
        <p>
            Но гораздо более распространённым, 
            является месячный доход от 100 000 до 150 000 рублей 
            для новых фрилансеров и от 150 000 до 200 000 рублей для
            хорошо зарекомендовавших себя специалистов. Эти цифры основаны 
            на усредненных показателях в целом по России.
        </p>
        <p>
            Конечно, не всякая оплата осуществляется в виде наличных средств.
            Некоторые разработчики откажутся от определенной суммы наличных дене
            г в пользу бесплатной рекламы, рефералов или других услуг. 
            Они будут принимать от своих клиентов согласованные количества 
            бесплатных товаров или дисконтированных продуктов в качестве дополнения
            к уплаченной сумме. Благодаря клиентам вы можете бесплатно получать копии платных программ.
        </p>
    </div>
</div>
<div class="footer">
    <div class="header">
        Информационный <br>портал
      <nav>
      <ul class=nav_link>
              <li><a href="index.php">Главная</a></li><br>
              <li><a href="indexHtml.php">HTML</a></li><br>
              <li><a href="indexCSS.php">CSS</a></li><br>
              <li><a href="indexJava.php">Java</a></li><br>
          </ul>
      </nav>
      <nav>
          <ul class=nav_link>
              <li><a href="indexJavaScript.php">JavaScript</a></li><br>
              <li><a href="indexPhp.php">PHP</a></li><br>
              <li><a href="indexPython.php">Python</a></li><br>
              <li><a href="indexMysql.php">Mysql</a></li><br>
          </ul>
      </nav>
      <form action="contact.php" method="POST">
            <input type="email" name="email" placeholder="Введите ваш email"><br>
            <input class="knopka" type="submit" submit="отправить">
      </form>
  </div>
</div>
<?php require "document.php/footer.php"?>
</body>
</html>