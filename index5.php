<!Doctype html>
<html>
<head>
	<link rel="stylesheet" type="text/css" href="./css/styleMysql.css">
	<title>Web-сайт</title>
	<meta charset="UTF-8">
</head>
<body>
<?php require "document/header5.php" ?>
<div class="font">
	<h2>MySQL</h2>
		<p class="text2">MySQL-cвободная реляционная система управления базами данных. Разработку и поддержку MySQL осуществляет корпорация Oracle, получившая права на торговую марку вместе с поглощённой Sun Microsystems, которая ранее приобрела шведскую компанию MySQL AB. Продукт распространяется как под GNU General Public License, так и под собственной коммерческой лицензией. Помимо этого, разработчики создают функциональность по заказу лицензионных пользователей. Именно благодаря такому заказу почти в самых ранних версиях появился механизм репликации.</p>
	<h3>Что такое база данных?</h3>
		<p class="teet">В нашем случае данные — это файлы, а база — место, где они хранятся. Данные могут принимать любой облик.<br> <br>

		Представьте, что вы сделали плейлист в Spotify и добавили туда новый трек. Плейлист будет базой, а добавленная песня — данными. Каждая композиция, появившаяся в уже готовом плейлисте, станет частью существующей базы данных. Так она будет пополняться.<br><br>

		Таких баз может быть много. Например, интернет-магазин, продающий гитары, тоже оперирует базами данных. В них хранятся инструменты из каталога, отсортированные по заранее продуманным критериям (производитель, количество струн и т.п.). <br><br>

		Получается, что базы могут быть многоуровневыми и делиться на различные категории (разделы каталога в случае с магазином). Так формируются взаимосвязи между разными элементами базы данных, появляется структура. Отсюда и термин «реляционная» – он намекает на зависимость элементов друг от друга.<br><br>

		Так что база данных — это набор структурированных данных с выстроенными между ними «взаимоотношениями» (делением на категории, к примеру). <br><br>

		Визуально она представляет собой таблицу с тысячами элементов (ссылками, файлами, отрывками текста и т.п.). Чтобы этим добром управлять, необходимо как-то обозначить таблицы и научиться ими управлять. Тут и пригодится SQL.</p><br>
		
	<h3>Основные задачи, выполняемые SQL</h3>
		<p class="teet">Structured Query Language появился в 1970 году и быстро заменил собой аналогичные, но устаревшие VISAM и ISAM. Они были нужны для управления данными.</p><br>
		<p class="teet">В их «обязанности» входило:</p>
	<ul>
		<li>Извлечение запрашиваемой информации из ячеек базы данных по запросу клиента.</li><br>
		
		<li>Разного рода манипуляции с данными, включая добавление новых элементов в таблицу, удаление, изменение существующей в базе информации и ее сортировку. Сюда же относят и некоторые другие редко используемые операции.</li><br>
		
		<li>Идентификация данных из базы. Я уже упомянул это выше. Речь идет об определении отдельных компонентов. К примеру, идентификации чисел в тексте как целых чисел для соответствующей их обработки. Также процесс идентификации необходим реляционной сущности MySQL для определения взаимоотношений между разными слоями таблиц в базе данных.</li><br>
		
		<li>Управление данными. </li><br>
		
		<li>Защита и шифрования информации в таблицах.</li><br>
	</ul>
	
	<h3>Принцип работы MySQL-серверов</h3>
		<p class="teet">Он такой же, как в любых клиент-серверных моделях. Одно устройство делает запрос, а второе отвечает. Запрашивающих может быть больше одного, все зависит от сервера, сети и поставленных задач. </p><br>
		
		<p class="teet">Технически немного иные, но по своей сути идентичные процессы происходят в среде MySQL:</p>
		
	<ul>
		<li>Система создает базу данных для хранения информации (ее сортировки, идентификации и т.п.).</li>
		<li>Клиенты (другие компьютеры в сети) подают запросы к базе с помощью специфичных для SQL команд.</li>
		<li>Серверное приложение обрабатывает запрос и выдает ответ клиенту (выдает запрашиваемые данные).</li>
	</ul>
	
		<p class="teet"> Для взаимодействия с MySQL-сервером используются соответствующие утилиты. Некоторые работают только в командной строке. Некоторые награждены графическим интерфейсом. Популярные решения – WorkBench, SequelPro, SQL Studio, TablePlus. Правда, большинство вебмастеров предпочитает phpMyAdmin, так как та входит в LAMP и работает в браузере.</p>
		
	<h3>Почему MySQL так популярна?</h3>
		<p class="teet">Если взглянуть на статистику, то по частоте использования и упоминания в сети MySQL проигрывает только решению от компании Oracle. Из-за чего так происходит? Конечно же, из-за ее преимуществ над существующими конкурентами.  </p><br>
		
		<p class="teet">На швейцарскую систему полагаются IT-корпорации ранга Facebook, потому что она:</p>
		
		<ul>
		<li>Гибкая и несложная в использовании. На создание и поддержку БД уходит меньше времени. Требуется меньший уровень компетенции для того, чтобы полноценно работать с MySQL и реализовывать весь ее потенциал.</li><br>
		
		<li>Имеет открытый исходный код, поэтому легко поддается модификации, и за это не нужно кому-то платить.</li><br>
		
		<li>Поддерживается компанией Oracle и сообществом разработчиков, выступающих за развитие opensource-приложений.</li><br>
		
		<li>Работает шустрее конкурентов. Внутренняя структура MySQL позволяет ей разгребать завалы из таблиц и строк за секунды. Независимо от специфичности связей между данными и их количества, сервер обрабатывает запросы любой сложности быстрее других БД. </li><br>
		
		<li>Стала именем нарицательным и вместе с этим неким стандартом в индустрии. Компании ищут сотрудников, умеющих работать с MySQL, интернет пестрит инструкциями по работе как раз с MySQL-серверами.</li><br>
		
		<li>Может похвастаться высоким уровнем защиты данных благодаря системе выдачи прав и продвинутой системе управления пользователями. А еще тут есть верификация на базе хостинга и шифрование.</li><br>
	</ul>
	
	<h3>Недостатки MySQL</h3>
		<p class="teet">Не обошлось без как минимум 4 увесистых ложек дегтя в бочку обсуждаемой СУБД.</p><br>
	
			<ol>
		<li>Гибкая и несложная в использовании. На создание и поддержку БД уходит меньше времени. Требуется меньший уровень компетенции для того, чтобы полноценно работать с MySQL и реализовывать весь ее потенциал.</li><br>
		
		<li>Имеет открытый исходный код, поэтому легко поддается модификации, и за это не нужно кому-то платить.</li><br>
		
		<li>Поддерживается компанией Oracle и сообществом разработчиков, выступающих за развитие opensource-приложений.</li><br>
		
		<li>Работает шустрее конкурентов. Внутренняя структура MySQL позволяет ей разгребать завалы из таблиц и строк за секунды. Независимо от специфичности связей между данными и их количества, сервер обрабатывает запросы любой сложности быстрее других БД. </li><br>
		
		<li>Стала именем нарицательным и вместе с этим неким стандартом в индустрии. Компании ищут сотрудников, умеющих работать с MySQL, интернет пестрит инструкциями по работе как раз с MySQL-серверами.</li><br>
		
		<li>Может похвастаться высоким уровнем защиты данных благодаря системе выдачи прав и продвинутой системе управления пользователями. А еще тут есть верификация на базе хостинга и шифрование.</li><br>
	</ol>
</div>



<?php require "document/footer5.php" ?>
</body>
</html>