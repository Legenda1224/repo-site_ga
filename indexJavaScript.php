<!DOCTYPE html>
<!-- <html lang="en"> -->
<head>
    <meta charset="UTF-8">
    <meta name="keywords" content="JavaScript,История JavaScript" />
    <meta name="description" content="Что такое JavaScript Зачем изучать JavaScript" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./css/styleJS.css">
    <title>JavaScript</title>
</head>
<body>
<?php require "document.php/header.php"?>
<div class="container">
    <div class="JS">
        <h3>
            JavaScript
        </h3>
        <p>
            <strong>JavaScript </strong>
            является самым популярным в мире легким, интерпретируемый 
            составленный язык программирования. Он также известен как язык 
            сценариев для веб-страниц. Он хорошо известен для разработки веб-страниц, 
            многие не-браузер среды также использовать его. JavaScript может использоваться 
            как для клиентских разработок, так и для разработки на стороне сервера.
        </p>
	<img id="img" src="./img/JavaScriptTutorial.png">
	<h3>
        <strong>История  JavaScript</strong>
    </h3>
		<p>
            Само наименование Javascript появилось не сразу.
		    Изначально язык назывался Mocha, затем появился термин
		    Livescript. Это гораздо более ёмко отражало его суть. 
		    В то время в браузерах активно внедрялась поддержка нового,
		    перспективного языка Java. Тогда и было решено переименовать 
		    Livescript в Javascript. Схожесть между языками есть, прежде 
		    всего, по синтаксису. Но по сути это очень разные инструменты.<br><br>

		    В 2015 году вышла версия ES6 (ES2015). 
		    Это событие считается прорывом в развитии Javascript. 
		    Появились новые стандарты и возможности. Например – константы.<br><br>

		    Код стал более рациональным, была реализована идея «пиши меньше – делай больше».<br><br>

		    Javascript – динамический скриптовый язык программирования высокого уровня.
		    Он отличается мультипарадигменностью. Речь идет о поддержке функционального, 
		    императивного, событийно-ориентированного стилей. Чаще всего язык используется 
		    для создания интерактивных веб-страниц и приложений.
        </p>
		
	<h3>
        <strong>Востребованность, сферы применения</strong>
    </h3>
		<p>
            Неизменно высокий интерес к Javascript подтверждают 
		    специальные международные рейтинги. Эти индексы представляют
		    собой аналитические данные, в основе которых:
        </p>
	<ul>
		<li>запросы по языкам программирования в поисковых системах;</li>
		<li>вопросы на профессиональных форумах;</li>
		<li>проекты, реализованные с использованием тех или иных технологий;</li>
		<li>вакансии для программистов от крупнейших рекрутинговых агентств.</li>
	</ul>
		<p>
            <b>	PYPL (PopularitY of Programming Language).</b>
			Авторитетный рейтинг, в его основе – данные крупнейшего
			поисковика Google SE. Javascript – в тройке лидеров.
        </p>
		<img src="./img/615135.png">
		<p>
            <strong>JavaScript можно добавить в HTML-файл двумя способами:</strong>
        </p>
	<ul>
	    <li><p id="bn">Внутренние JS:</p> Мы можем добавить JavaScript непосредственно в наш HTML-файл, написав код внутри тега «lt;script»gt; Тег «lt;script»gt; может быть помещен в тег «lt;head»gt; или тег «lt;body»gt; в соответствии с требованием.</li>
	    <li><p id="bn">Внешние JS:</p> Мы можем написать код JavaScript в другом файле с расширением .js а затем связать этот файл внутри тега HTML-файла, в котором мы хотим добавить этот код.</li>
	</ul>
	    <p>
            Синтаксис:
        </p>
	<img id="img2" src="./img/999.png">
		<p>
            Пример: Это основной пример кода JavaScript, встроенного в HTML-код.
        </p>
	<img id="img" src="./img/08909808.png">
	<h3>
        <strong>Что мы можем построить с помощью JavaScript?</strong>
    </h3>
		<p>
            JavaScript является широко используемым языком программирования.
             Ниже приведены некоторые домены / продукты, которые могут быть 
             построены с помощью JavaScript:
        </p>
	<ul>	
		<li><p id="bn">Веб-сайты:</p> JavaScript помогает нам добавлять поведение нашего сайта. Это помогает пользователю взаимодействовать с веб-сайтом. Например. нажатие на кнопки, сохранение деталей, загрузка деталей на веб-сайте и т.д.</li>
		
		<li><p id="bn">Веб-серверы:</p> Мы можем делать надежные серверные приложения с помощью JavaScript. Если быть точным, мы используем фреймворки JavaScript, такие как Node.js и Express.js для создания этих серверов.</li>
		
		<li><p id="bn">Разработка игры:</p> В индустрии разработки игр JavaScript широко используется. С добавлением HTML5 Canvas, теперь можно сделать 2D и 3D игры в JavaScript очень эффективно.</li>
		
		<li><p id="bn">3D рисунки:</p> JavaScript в дополнение к HTML Canvas используется для трехмерной графики.</li>
		
		<li><p id="bn">Мобильные приложения:</p> Мобильные приложения являются наиболее популярными способами общения в эти дни. JavaScript также используется для разработки 	мобильных приложений. Существует множество платформ JavaScript, с помощью которых мы можем делать андроид, IOS и гибридные приложения.</li>
		
		<li><p id="bn">Смарт-часы Приложения:</p> Популярный производитель смарт-часов Pebble создал Pebble.js, небольшую рамку JavaScript, которая позволяет разработчику создавать приложение для линейки часов Pebble на JavaScript.</li>
	</ul>

	<h3>
        <strong>Зачем изучать JavaScript?</strong>
    </h3>
		<p> 
            JavaScript является самым популярным и, следовательно,
             самым любимым языком во всем мире. Помимо этого, Есть много причин, 
             чтобы узнать его. Ниже приведены некоторые важные моменты:
        </p>
	<ul>	
		<li><p id="bn">Нет необходимости в компиляторах:</p> Поскольку JavaScript является интерпретируемый язык, поэтому он не нуждается в компилятор для компиляций.</li>
		
		<li><p id="bn">Используется как клиент, так и серверная сторона:</p> Ранее JavaScript использовался только для создания клиентских приложений, но с развитием его фреймворка, а именно Node.js и Express.js, в настоящее время широко используется и для создания серверных приложений.</li>
		
		<li><p id="bn">Помогает выстроить полное решение:</p> Как мы видели, JavaScript широко используется как в клиентских, так и в серверных приложениях, поэтому он помогает нам создавать постоянное решение данной проблемы.</li>
		
		<li><p id="bn">Используется везде:</p> JavaScript так любят, потому что он может быть использован в любом месте. Он может быть использован для разработки веб-сайтов, игр или мобильных приложений и т.д.</li>
		
		<li><p id="bn">Огромная поддержка сообщества:</p> JavaScript имеет огромное сообщество пользователей и наставников, которые любят этот язык и принять его наследие вперед.</li>
		
	</ul>
	
	<h3>
        <strong>Достоинства и недостатки</strong>
    </h3>
		<p>
            Javascript популярен не случайно, а благодаря своим несомненным достоинствам.<br><br>

			Незаменимость для веб-разработки. Поддержка скриптов всеми популярными браузерами; полная интеграция с вёрсткой страниц (HTML+CSS) и серверной частью (backend).<br><br>

			Простота и рациональность применения. Простую задачку можно решить за 5 минут, не надо делать лишнюю работу. Для сложных заданий есть варианты решения, можно подобрать лучший, адаптировать.<br><br>

			Скорость работы и производительность. Javascript позволяет частично обрабатывать веб-страницы на компьютерах пользователя без запросов к серверу. Это экономит время и трафик, снижает нагрузку на сервер.<br><br>

			Удобство пользовательских интерфейсов. Заполнение форм, выбор действий, активация кнопок, проверки ввода, реагирование на наведение / клики мыши и т.п Это даёт потрясающий уровень юзабилити.<br><br>

			Мощная инфраструктура (экосистема). Первые 10 лет этого не было и в помине. Затем количество готовых решений в открытом доступе так возросло, что работать с Javascript и его фреймворками стало удовольствием.<br><br>

			Лёгкость освоения. Возможно, это дело привычки. Сначала код может показаться сложным, но к его синтаксису, логике быстро привыкаешь. Отображение действий ощутимо добавляет энтузиазма.<br><br>

			Как любой язык программирования, Javascript имеет некоторые недостатки (ограничения).<br><br>

			Нет возможности чтения и загрузки файлов. Это ограничение функциональности на стороне клиента. Главная причина – соображения безопасности.<br><br>

			Нет поддержки удалённого доступа. Поэтому язык нельзя использовать для сетевых приложений. За это Javascript даже не считают полноценным языком программирования.<br><br>

			Нестрогая типизация и вольная трактовка. Язык игнорирует явные нестыковки. Имеет место разная интерпретация данных. Нет возможности раннего выявления ошибок. Все недочёты выявляются уже на этапе работы.<br><br>

			Доступность для злоумышленников. В свободный скриптовый язык проще всего встроить фрагмент вредоносного кода, который может навредить пользователю. Надежда только на антивирус и фаервол.<br><br>

			Надо отметить, что сообщество пользователей Javascript активно улучшает язык, устраняя многие недостатки. Узких мест становится всё меньше. Браузеры постоянно совершенствуют работу с JS. Выход HTML 5 дал новый толчок к расширению возможностей скриптов.
        </p>
    </div>
</div>



<div class="footer">
    <div class="header">
         Информационный <br>портал
         <nav>
      <ul class=nav_link>
              <li><a href="index.php">Главная</a></li><br>
              <li><a href="indexHtml.php">HTML</a></li><br>
              <li><a href="indexCSS.php">CSS</a></li><br>
              <li><a href="indexJava.php">Java</a></li><br>
          </ul>
      </nav>
      <nav>
          <ul class=nav_link>
              <li><a href="indexJavaScript.php">JavaScript</a></li><br>
              <li><a href="indexPhp.php">PHP</a></li><br>
              <li><a href="indexPython.php">Python</a></li><br>
              <li><a href="indexMysql.php">Mysql</a></li><br>
          </ul>
      </nav>
      <form action="contact.php" method="POST">
            <input type="email" name="email" placeholder="Введите ваш email"><br>
            <input class="knopka" type="submit" submit="отправить">
      </form>
  </div>
</div>
<!-- <script src=./js/script.js></script> -->
<?php require "document.php/footer.php"?>
</body>
</html>